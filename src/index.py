import os
import yfinance as yf
import json
from datetime import datetime

# List of stock symbols
snp_500_symbols = [
    "AAPL",
    "MSFT",
    "NVDA",
    "GOOGL",
    "GOOG",
    "AMZN",
    "META",
    "LLY",
    "AVGO",
    "TSLA",
    "JPM",
    "WMT",
    "XOM",
    "UNH",
    "V",
    "MA",
    "PG",
    "JNJ",
    "ORCL",
    "COST",
    "HD",
    "ABBV",
    "BAC",
    "MRK",
    "CVX",
    "KO",
    "NFLX",
    "CRM",
    "ADBE",
    "PEP",
    "TMO",
    "AMD",
    "LIN",
    "WFC",
    "ACN",
    "TMUS",
    "QCOM",
    "DHR",
    "CSCO",
    "TXN",
    "GE",
    "ABT",
    "MCD",
    "AMGN",
    "INTU",
    "PM",
    "IBM",
    "AXP",
    "PFE",
    "BX",
    "CAT",
    "AMAT",
    "NOW",
    "MS",
    "VZ",
    "DIS",
    "GS",
    "ISRG",
    "CMCSA",
    "SPGI",
    "NEE",
    "RTX",
    "UNP",
    "T",
    "LOW",
    "UBER",
    "INTC",
    "HON",
    "COP",
    "VRTX",
    "BLK",
    "TJX",
    "SYK",
    "PGR",
    "BKNG",
    "LMT",
    "C",
    "ELV",
    "MU",
    "ETN",
    "SCHW",
    "LRCX",
    "REGN",
    "BA",
    "PLD",
    "ADI",
    "UPS",
    "BSX",
    "CB",
    "NKE",
    "MMC",
    "DE",
    "KLAC",
    "PANW",
    "KKR",
    "ADP",
    "BMY",
    "MDT",
    "ANET",
    "AMT",
    "CI",
    "GILD",
    "FI",
    "HCA",
    "ABNB",
    "SO",
    "MDLZ",
    "SHW",
    "MO",
    "ICE",
    "SBUX",
    "SNPS",
    "DUK",
    "ZTS",
    "MCO",
    "CL",
    "GD",
    "WM",
    "MCK",
    "CTAS",
    "APH",
    "CVS",
    "TT",
    "ITW",
    "FDX",
    "EQIX",
    "EOG",
    "CME",
    "PNC",
    "PH",
    "NOC",
    "USB",
    "CDNS",
    "MMM",
    "AON",
    "ECL",
    "SLB",
    "TDG",
    "TGT",
    "BDX",
    "CMG",
    "MAR",
    "CSX",
    "EMR",
    "MSI",
    "WELL",
    "ORLY",
    "FCX",
    "NXPI",
    "CRWD",
    "AJG",
    "PYPL",
    "MPC",
    "PSX",
    "CARR",
    "RSG",
    "TFC",
    "ROP",
    "APD",
    "DHI",
    "COF",
    "NSC",
    "CEG",
    "MET",
    "HLT",
    "NEM",
    "AFL",
    "OXY",
    "MNST",
    "CHTR",
    "PSA",
    "AZO",
    "VLO",
    "PCAR",
    "ADSK",
    "WMB",
    "AIG",
    "AEP",
    "O",
    "URI",
    "SRE",
    "SPG",
    "GM",
    "CPRT",
    "BK",
    "TRV",
    "LEN",
    "TEL",
    "OKE",
    "KMB",
    "GWW",
    "KMI",
    "GEV",
    "HUM",
    "DLR",
    "ROST",
    "MRNA",
    "CCI",
    "MCHP",
    "JCI",
]

# Define the start and end dates for the historical data
start_date = "1980-01-01"
end_date = datetime.now().strftime("%Y-%m-%d")

# Define the path to the folder where data will be saved
desktop_path = os.path.join(os.path.expanduser("~"), "Desktop/thesis")
data_folder = os.path.join(desktop_path, "stock_data")

# Create the folder if it doesn't exist
os.makedirs(data_folder, exist_ok=True)


# Function to download and save stock data
def download_stock_data(symbol):
    try:
        # Download historical data
        stock_data = yf.download(symbol, start=start_date, end=end_date)

        # Convert the data to JSON format
        stock_data_json = stock_data.to_json(orient="index")

        # Define the file path
        file_path = os.path.join(data_folder, f"{symbol}.json")

        # Save the data to a JSON file
        with open(file_path, "w") as file:
            file.write(stock_data_json)

        print(f"Data for {symbol} saved successfully.")
    except Exception as e:
        print(f"Failed to download data for {symbol}: {e}")


# Download data for each symbol in the list
for symbol in snp_500_symbols:
    download_stock_data(symbol)
